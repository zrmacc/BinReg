% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Score.R
\name{Score.BinReg}
\alias{Score.BinReg}
\title{Score Test for Binary Regression}
\usage{
Score.BinReg(y, X, L, b10 = NULL, model = "logistic", df = NULL,
  sig = 0.05, eps = 1e-08, maxit = 10, report = T)
}
\arguments{
\item{y}{Numeric response vector.}

\item{X}{Numeric model matrix.}

\item{L}{Logical vector, with as many entires as columns in the model matrix,
indicating which columns have fixed coefficients under the null.}

\item{b10}{Value of the regression coefficient for the selected columns under
the null. Defaults to zero.}

\item{model}{Selected from among logistic, probit, and robit.}

\item{df}{Degrees of freedom, if using the robit model.}

\item{sig}{Significance level, for CIs.}

\item{eps}{Tolerance for Newton-Raphson iterations.}

\item{maxit}{Maximum number of NR iterations.}

\item{report}{Report fitting progress?}
}
\value{
A numeric vector containing the score statistic, the degrees of 
  freedom, and a p-value.
}
\description{
Tests the hypothesis that a subset of the regression coefficients are fixed
at a reference value. Specifically, let \eqn{\beta} denote the regression
coefficient. Partition \eqn{\beta=(\beta_{1},\beta_{2})}. Suppose that 
interest lies in testing that \eqn{\beta_{1}} is fixed at \eqn{\beta_{10}}. 
\code{Score.BinReg} performs a score test of
\eqn{H_{0}:\beta_{1}=\beta_{10}}. The test is specified using a logical vector
\code{L}, with as many entries as columns in the model matrix \code{X}. The
values of \code{L} set to \code{T} are constrained under the null, while
values of \code{L} set to \code{F} are estimated under the null.
}
\examples{
\dontrun{
set.seed(101);
# Design matrix
X = cbind(1,matrix(rnorm(n=4*1e3),nrow=1e3));
# Regression coefficient
b = c(1,-1,2,-1,0);
# Logistic outcome
y = rBinReg(X,b,model="logistic");
# Test b1=b2=b3=b4=0, which is false.
Score.BinReg(y=y,X=X,L=c(F,T,T,T,T),model="logistic",report=F);
# Test b4=0, which is true.
Score.BinReg(y=y,X=X,L=c(F,F,F,F,T),model="logistic",report=F);
# Test b2=0 and b4=2, which if false.
Score.BinReg(y=y,X=X,L=c(F,F,T,F,T),b10=c(0,2),model="logistic",report=F);
# Test b1=b3=-1, which is true. 
Score.BinReg(y=y,X=X,L=c(F,T,F,T,F),b10=c(-1,-1),model="logistic",report=F);
}
}
